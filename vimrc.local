set bg=dark

call pathogen#helptags()
call pathogen#runtime_append_all_bundles()

nmap <silent> <leader>ev :e $MYVIMRC<CR>
nmap <silent> <leader>sv :so $MYVIMRC<CR>
set hidden

set nowrap

set copyindent
set smartindent
set shiftround
set showmatch

set smarttab

set hlsearch

set history=1000
set undolevels=1000
set title
set visualbell
set noerrorbells

set nobackup
set showcmd

if has('autocmd')
  autocmd FileType python set expandtab
  autocmd FileType html,xml set listchars-=tab:>.
  autocmd FileType php set expandtab tabstop=8 shiftwidth=4 encoding=utf-8 scrolloff=3
endif

nnoremap ; :

vmap Q gq
nmap Q gqap

nmap <silent> ,/ :nohlsearch<CR>

set nojoinspaces "Don't convert spaces to tabs
set autowrite
set shell=bash
set suffixes=.bac,~,.swp,.o,.info,.aux,.log,.dvi,.bbl,.blg,.brf,.cb,.ind,.idx,.ilg,.inx,.out,.toc
set pastetoggle=<F10>
set ttyfast
set termencoding=iso-8859-1
set fileencoding=utf-8
set textwidth=0
set cinoptions=>1s
set scrolljump=5
set statusline=%F%m%r%h%w\ [FORMAT=%{&ff}]\ [TYPE=%Y]\ [ASCII=\%03.3b]\ [HEX=\%02.2B]\ [POS=%04l,%04v][%p%%]\ [LEN=%L]\ %{fugitive#statusline()}

hi Comment ctermfg=LightBlue guifg=LightBlue
autocmd! bufwritepost .vimrc source %

if has("autocmd")
  au BufNewFile,BufRead mutt*,*.txt set tw=77 ai nocindent fileencoding=iso-8859-1 modifiable
endif

" fix home / end problem
" For some reason home and end keys are not mapping properly.
" Home key
imap <esc>OH <esc>0i
cmap <esc>OH <home>
nmap <esc>OH 0
" End key
nmap <esc>OF $
imap <esc>OF <esc>$a
cmap <esc>OF <end>

" Correct indentation after opening a phpdocblock and automatic * on every line
set formatoptions=qroct

"Wrap visual selections with chars
:vnoremap ( "zdi^V(<C-R>z)<ESC>
:vnoremap { "zdi^V{<C-R>z}<ESC>
:vnoremap [ "zdi^V[<C-R>z]<ESC>
:vnoremap ' "zdi^V'<C-R>z'<ESC>
:vnoremap " "zdi^V"<C-R>z^V"<ESC>

" Detect filetypes
augroup filetypedetect
    au! BufRead,BufNewFile *.pp setfiletype puppet
    au! BufRead,BufNewFile *httpd.conf setfiletype apache
    au! BufRead,BufNewFile *inc setfiletype php
    au! BufRead,BufNewFile *.py set sw=4 ts=4 sts=4 et
augroup END

augroup Programming
" clear auto commands for this group
autocmd!
autocmd BufWritePost *.php !php -d display_errors=on -l <afile>
autocmd BufWritePost *.inc !php -d display_errors=on -l <afile>
autocmd BufWritePost *httpd*.conf !/etc/rc.d/init.d/httpd configtest
autocmd BufWritePost *.bash !bash -n <afile>
autocmd BufWritePost *.sh !bash -n <afile>
autocmd BufWritePost *.pl !perl -c <afile>
autocmd BufWritePost *.perl !perl -c <afile>
autocmd BufWritePost *.xml !xmllint --noout <afile>
autocmd BufWritePost *.xsl !xmllint --noout <afile>
autocmd BufWritePost *.js !jshint <afile>
au BufRead,BufNewFile *.js set ft=javascript.jquery
autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
autocmd BufWritePost *.rb !ruby -c <afile>
autocmd BufWritePost *.pp !puppet --parseonly <afile>
autocmd BufWritePost *.py call Flake8()
au BufRead,BufNewFile *.md set filetype=markdown
augroup en

autocmd FileType python map <buffer> \p :call Flake8()<CR>
let g:flake8_builtins="_,apply"

set ls=2 " always show status line

if &term == "xterm-color"
  fixdel
endif

" Use the dictionary completion
set complete-=k complete+=k

nmap \l :setlocal number!<CR>
nmap \o :set paste!<CR>
nmap \e :NERDTreeToggle<CR>
nmap \g :GundoToggle<CR>

if $TERM == "xterm-256color" || $TERM == "screen-256color" || $COLORTERM == "gnome-terminal"
  set t_Co=256
endif

noremap <Up> <NOP>
noremap <Down> <NOP>
noremap <Left> <NOP>
noremap <Right> <NOP>

" highlight TODO, FIXME etc
match Todo /\s\+$/

highlight ExtraWhitespace ctermbg=red guibg=red
au ColorScheme * highlight ExtraWhitespace guibg=red
au BufEnter * match ExtraWhitespace /\s\+$/
au InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
au InsertLeave * match ExtraWhiteSpace /\s\+$/

let php_sql_query=1

let g:phpqa_messdetector_ruleset = "/usr/share/php/data/php_pmd/resources/rulesets"
let g:phpqa_codesniffer_args = "--standard=PSR2"


imap jj <Esc>
autocmd! bufwritepost .vimrc source ~/.vimrc
